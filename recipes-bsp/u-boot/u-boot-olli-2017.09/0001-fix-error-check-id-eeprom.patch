From bf75d7c84aee1b49c613bde22cb99a97e39804ed Mon Sep 17 00:00:00 2001
From: hoahiepnguyen <hiep@olli-ai.com>
Date: Mon, 11 Sep 2017 14:11:12 +0700
Subject: [PATCH 1/1] fix error check id eeprom

---
 board/ti/am335x/board.c           | 29 ++++++++++++++++----------
 board/ti/am335x/mux.c             | 13 ++++++++----
 include/configs/am335x_evm.h      | 43 ++++++++++++++++++++++++++-------------
 include/configs/ti_armv7_common.h |  5 ++++-
 4 files changed, 60 insertions(+), 30 deletions(-)

diff --git a/board/ti/am335x/board.c b/board/ti/am335x/board.c
index 554398f..47c43b7 100644
--- a/board/ti/am335x/board.c
+++ b/board/ti/am335x/board.c
@@ -71,11 +71,12 @@ static int read_eeprom(struct am335x_baseboard_id *header)
 			return -EIO;
 		}
 
-		if (header->magic != 0xEE3355AA) {
-			printf("Incorrect magic number (0x%x) in EEPROM\n",
-					header->magic);
-			return -EINVAL;
-		}
+		/* fix error id memory */
+		// if (header->magic != 0xEE3355AA) {
+		// 	printf("Incorrect magic number (0x%x) in EEPROM\n",
+		// 			header->magic);
+		// 	return -EINVAL;
+		// }
 	}
 
 	return 0;
@@ -474,20 +475,26 @@ void sdram_init(void)
 		gpio_direction_output(GPIO_DDR_VTT_EN, 1);
 	}
 
-	if (board_is_evm_sk(&header))
+	if (board_is_evm_sk(&header)) {
 		config_ddr(303, &ioregs_evmsk, &ddr3_data,
 			   &ddr3_cmd_ctrl_data, &ddr3_emif_reg_data, 0);
-	else if (board_is_bone_lt(&header))
+	}
+	else if (board_is_bone_lt(&header)) {
 		config_ddr(400, &ioregs_bonelt,
 			   &ddr3_beagleblack_data,
 			   &ddr3_beagleblack_cmd_ctrl_data,
 			   &ddr3_beagleblack_emif_reg_data, 0);
-	else if (board_is_evm_15_or_later(&header))
+	}
+	else if (board_is_evm_15_or_later(&header)) {
 		config_ddr(303, &ioregs_evm15, &ddr3_evm_data,
 			   &ddr3_evm_cmd_ctrl_data, &ddr3_evm_emif_reg_data, 0);
-	else
-		config_ddr(266, &ioregs, &ddr2_data,
-			   &ddr2_cmd_ctrl_data, &ddr2_emif_reg_data, 0);
+	}
+	else {
+		config_ddr(400, &ioregs_bonelt,
+			   &ddr3_beagleblack_data,
+			   &ddr3_beagleblack_cmd_ctrl_data,
+			   &ddr3_beagleblack_emif_reg_data, 0);
+	}
 }
 #endif
 
diff --git a/board/ti/am335x/mux.c b/board/ti/am335x/mux.c
index b2bfda5..b4ed33d 100644
--- a/board/ti/am335x/mux.c
+++ b/board/ti/am335x/mux.c
@@ -348,11 +348,13 @@ void enable_board_pin_mux(struct am335x_baseboard_id *header)
 		configure_module_pin_mux(rgmii1_pin_mux);
 		configure_module_pin_mux(mmc0_pin_mux);
 		/* In profile #2 i2c1 and spi0 conflict. */
-		if (profile & ~PROFILE_2)
+		if (profile & ~PROFILE_2) {
 			configure_module_pin_mux(i2c1_pin_mux);
+		}
 		/* Profiles 2 & 3 don't have NAND */
-		if (profile & ~(PROFILE_2 | PROFILE_3))
+		if (profile & ~(PROFILE_2 | PROFILE_3)) {
 			configure_module_pin_mux(nand_pin_mux);
+		}
 		else if (profile == PROFILE_2) {
 			configure_module_pin_mux(mmc1_pin_mux);
 			configure_module_pin_mux(spi0_pin_mux);
@@ -379,7 +381,10 @@ void enable_board_pin_mux(struct am335x_baseboard_id *header)
 		configure_module_pin_mux(mmc0_pin_mux);
 		configure_module_pin_mux(mmc1_pin_mux);
 	} else {
-		puts("Unknown board, cannot configure pinmux.");
-		hang();
+		/* Beaglebone LT pinmux */
+		configure_module_pin_mux(i2c1_pin_mux);
+		configure_module_pin_mux(mii1_pin_mux);
+		configure_module_pin_mux(mmc0_pin_mux);
+		configure_module_pin_mux(mmc1_pin_mux);
 	}
 }
diff --git a/include/configs/am335x_evm.h b/include/configs/am335x_evm.h
index 884a42b..a7d2ac0 100644
--- a/include/configs/am335x_evm.h
+++ b/include/configs/am335x_evm.h
@@ -61,13 +61,14 @@
 
 #ifndef CONFIG_SPL_BUILD
 #define CONFIG_EXTRA_ENV_SETTINGS \
-	"loadaddr=0x80200000\0" \
-	"fdtaddr=0x80F80000\0" \
+	"loadaddr=0x82000000\0" \
+	"fdtaddr=0x88000000\0" \
 	"fdt_high=0xffffffff\0" \
 	"boot_fdt=try\0" \
-	"rdaddr=0x81000000\0" \
-	"bootpart=0:2\0" \
-	"bootdir=/boot\0" \
+	"rdaddr=0x88080000\0" \
+	"bootpart=0:1\0" \
+	"bootdir=\0" \
+	"fdtdir=/dtbs\0" \
 	"bootfile=zImage\0" \
 	"fdtfile=undefined\0" \
 	"console=ttyO0,115200n8\0" \
@@ -76,7 +77,8 @@
 		"name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}\0" \
 	"optargs=\0" \
 	"mmcdev=0\0" \
-	"mmcroot=/dev/mmcblk0p2 ro\0" \
+	"mmcpart=1\0" \
+	"mmcroot=/dev/mmcblk0p2 ro fixrtc\0" \
 	"mmcrootfstype=ext4 rootwait\0" \
 	"rootpath=/export/rootfs\0" \
 	"nfsopts=nolock\0" \
@@ -103,7 +105,7 @@
 		"nfsroot=${serverip}:${rootpath},${nfsopts} rw " \
 		"ip=dhcp\0" \
 	"bootenv=uEnv.txt\0" \
-	"loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}\0" \
+	"loadbootenv=load mmc ${bootpart} ${loadaddr} ${bootenv}\0" \
 	"importbootenv=echo Importing environment from mmc ...; " \
 		"env import -t $loadaddr $filesize\0" \
 	"ramargs=setenv bootargs console=${console} " \
@@ -112,7 +114,7 @@
 		"rootfstype=${ramrootfstype}\0" \
 	"loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz\0" \
 	"loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}\0" \
-	"loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}\0" \
+	"loadfdt=load mmc ${bootpart} ${fdtaddr} ${fdtdir}/${fdtfile}\0" \
 	"mmcloados=run mmcargs; " \
 		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
 			"if run loadfdt; then " \
@@ -129,18 +131,26 @@
 		"fi;\0" \
 	"mmcboot=mmc dev ${mmcdev}; " \
 		"if mmc rescan; then " \
+			"gpio set 54;" \
 			"echo SD/MMC found on device ${mmcdev};" \
 			"if run loadbootenv; then " \
+				"gpio set 55;" \
 				"echo Loaded environment from ${bootenv};" \
 				"run importbootenv;" \
 			"fi;" \
+			"if test -n $cape; then " \
+				"if test -e mmc ${bootpart} ${fdtdir}/$fdtbase-$cape.dtb; then " \
+					"setenv fdtfile $fdtbase-$cape.dtb; " \
+				"fi; " \
+				"echo using: $fdtfile...; " \
+			"fi; " \
+			"echo Checking if uenvcmd is set ...;" \
 			"if test -n $uenvcmd; then " \
+				"gpio set 56; " \
 				"echo Running uenvcmd ...;" \
 				"run uenvcmd;" \
 			"fi;" \
-			"if run loadimage; then " \
-				"run mmcloados;" \
-			"fi;" \
+			"echo; echo uenvcmd was not defined in uEnv.txt ...;"\
 		"fi;\0" \
 	"spiboot=echo Booting from spi ...; " \
 		"run spiargs; " \
@@ -159,9 +169,9 @@
 		"bootz ${loadaddr} ${rdaddr} ${fdtaddr}\0" \
 	"findfdt="\
 		"if test $board_name = A335BONE; then " \
-			"setenv fdtfile am335x-bone.dtb; fi; " \
+			"setenv fdtfile am335x-bone.dtb; setenv fdtbase am335x-bone; fi; " \
 		"if test $board_name = A335BNLT; then " \
-			"setenv fdtfile am335x-boneblack.dtb; fi; " \
+			"setenv fdtfile am335x-boneblack.dtb; setenv fdtbase am335x-boneblack; fi; " \
 		"if test $board_name = A33515BB; then " \
 			"setenv fdtfile am335x-evm.dtb; fi; " \
 		"if test $board_name = A335X_SK; then " \
@@ -173,10 +183,15 @@
 #endif
 
 #define CONFIG_BOOTCOMMAND \
+	"gpio set 53; " \
+	"i2c mw 0x24 1 0x3e; " \
 	"run findfdt; " \
 	"run mmcboot;" \
+	"gpio clear 56; " \
+	"gpio clear 55; " \
+	"gpio clear 54; " \
 	"setenv mmcdev 1; " \
-	"setenv bootpart 1:2; " \
+	"setenv bootpart 1:1; " \
 	"run mmcboot;" \
 	"run nandboot;"
 
diff --git a/include/configs/ti_armv7_common.h b/include/configs/ti_armv7_common.h
index 69d69a5..07f81c3 100644
--- a/include/configs/ti_armv7_common.h
+++ b/include/configs/ti_armv7_common.h
@@ -36,8 +36,10 @@
 /*
  * Our DDR memory always starts at 0x80000000 and U-Boot shall have
  * relocated itself to higher in memory by the time this value is used.
+ * However, set this to a 32MB offset to allow for easier Linux kernel
+ * booting as the default is often used as the kernel load address.
  */
-#define CONFIG_SYS_LOAD_ADDR		0x80000000
+#define CONFIG_SYS_LOAD_ADDR		0x82000000
 
 /*
  * Default to a quick boot delay.
@@ -151,6 +153,7 @@
 #define CONFIG_CMD_ASKENV
 #define CONFIG_CMD_ECHO
 #define CONFIG_CMD_BOOTZ
+#define CONFIG_SUPPORT_RAW_INITRD
 
 /*
  * Common filesystems support.  When we have removable storage we
-- 
2.7.4

